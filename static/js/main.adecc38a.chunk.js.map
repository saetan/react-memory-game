{"version":3,"sources":["cardData.js","Card.jsx","App.js","index.js"],"names":["cardData","rank","suit","cardImage","backgroundImage","Card","props","id","className","src","isFlipped","alt","App","useState","setFlipped","href","onClick","event","target","splice","console","log","map","record","index","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"gOAsCeA,G,MAtCE,CACf,CACEC,KAAM,QACNC,KAAM,SACNC,UACE,yFACFC,gBACE,+EAGJ,CACEH,KAAM,QACNC,KAAM,WACNC,UACE,2FACFC,gBACE,+EAGJ,CACEH,KAAM,OACNC,KAAM,SACNC,UACE,wFACFC,gBACE,+EAGJ,CACEH,KAAM,OACNC,KAAM,WACNC,UACE,0FACFC,gBACE,iF,OChCS,SAASC,EAAKC,GAEzB,OACI,mCACI,qBAAKC,GAAID,EAAMC,GAAIC,UAAU,OAAOC,IAAKH,EAAMI,UAAYJ,EAAMH,UAAYG,EAAMF,gBAAiBO,IAAI,UCDrG,SAASC,IACtB,MAAgCC,mBAAS,EAAC,GAAO,GAAO,GAAO,IAA/D,mBAAOH,EAAP,KAAkBI,EAAlB,KAgBA,OACE,sBAAKN,UAAU,MAAf,UACE,mCACE,6CACA,gCACE,mBAAGO,KAAK,gBAAR,0BACA,mBAAGA,KAAK,cAAR,wBAIJ,iCACE,oBAAIR,GAAG,eAAP,0BACA,gUAEA,qBAAKA,GAAG,YACR,qBAAKA,GAAG,aAAaC,UAAU,QAAQQ,QA7B5B,SAACC,GACe,SAA3BA,EAAMC,OAAOV,YACfE,EAAUS,OAAOF,EAAMC,OAAOX,GAAI,GAAIG,EAAUO,EAAMC,OAAOX,KAC7Da,QAAQC,IAAIX,GACZI,EAAW,YAAIJ,MAyBb,SAEIV,EAASsB,KAAI,SAACC,EAAQC,GACpB,OAAO,cAACnB,EAAD,aAAkBE,GAAIiB,EAAOd,UAAWA,EAAUc,IAAYD,GAAnDC,WAM1B,yBAAQhB,UAAU,WAAlB,UACE,mBAAGA,UAAU,YAAb,4BACA,oBAAGA,UAAU,UAAb,oCAC2B,sBAAMA,UAAU,OAAhB,yBC5CnC,IAAMiB,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClB,EAAD,MAEFa,K","file":"static/js/main.adecc38a.chunk.js","sourcesContent":["const cardData = [\n  {\n    rank: 'queen',\n    suit: 'hearts',\n    cardImage:\n      'https://res.cloudinary.com/jkeohan/image/upload/v1511808103/queen-of-hearts_nbvwls.png',\n    backgroundImage:\n      'https://res.cloudinary.com/jkeohan/image/upload/v1511808091/back_xldk5l.png'\n  },\n\n  {\n    rank: 'queen',\n    suit: 'diamonds',\n    cardImage:\n      'https://res.cloudinary.com/jkeohan/image/upload/v1511808103/queen-of-diamonds_opxv6b.png',\n    backgroundImage:\n      'https://res.cloudinary.com/jkeohan/image/upload/v1511808091/back_xldk5l.png'\n  },\n\n  {\n    rank: 'king',\n    suit: 'hearts',\n    cardImage:\n      'https://res.cloudinary.com/jkeohan/image/upload/v1511808103/king-of-hearts_njmwml.png',\n    backgroundImage:\n      'https://res.cloudinary.com/jkeohan/image/upload/v1511808091/back_xldk5l.png'\n  },\n\n  {\n    rank: 'king',\n    suit: 'diamonds',\n    cardImage:\n      'https://res.cloudinary.com/jkeohan/image/upload/v1511808103/king-of-diamonds_mpn7sm.png',\n    backgroundImage:\n      'https://res.cloudinary.com/jkeohan/image/upload/v1511808091/back_xldk5l.png'\n  }\n];\n\nexport default cardData;","import React from \"react\";\n\nexport default function Card(props) {\n\n    return (\n        <>\n            <img id={props.id} className=\"card\" src={props.isFlipped ? props.cardImage : props.backgroundImage} alt=\"uwu\" />\n        </>\n    )\n}\n","import React, { useState } from 'react';\nimport './styles.css';\nimport cardData from './cardData';\nimport Card from './Card'\n\nexport default function App() {\n  const [isFlipped, setFlipped] = useState([false, false, false, false]);\n\n  const flipCard = (event) => {\n    if (event.target.className === \"card\") {\n      isFlipped.splice(event.target.id, 1, !isFlipped[event.target.id]);\n      console.log(isFlipped);\n      setFlipped([...isFlipped]);\n    }\n  }\n\n  const renderCards = () => {\n    return cardData.map((record, index) => {\n      return <Card key={index} id={index} isFlipped={isFlipped[index]} {...record} />\n    })\n  }\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Memory Game</h1>\n        <nav>\n          <a href=\"#instructions\">Instructions</a>\n          <a href=\"#game-board\">Game</a>\n        </nav>\n      </header>\n\n      <main>\n        <h2 id=\"instructions\">Instructions</h2>\n        <p>Concentration, also known as Match Match, Memory, Pelmanism, Shinkei-suijaku, Pexeso or simply Pairs, is a card game in which all of the cards are laid face down on a surface and two cards are flipped face up over each turn.The object of the game is to turn over pairs of matching cards.</p>\n\n        <div id=\"message\"></div>\n        <div id=\"game-board\" className=\"board\" onClick={flipCard}>\n          {\n            cardData.map((record, index) => {\n              return <Card key={index} id={index} isFlipped={isFlipped[index]} {...record} />\n            })\n          }\n        </div>\n      </main >\n\n      <footer className=\"clearfix\">\n        <p className=\"copyright\">COPYRIGHT 2017</p>\n        <p className=\"message\">\n          Created with &hearts; by <span className=\"name\">GA</span>\n        </p>\n      </footer>\n\n    </div >\n  );\n}\n\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}